apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appdynamics-cluster-agent-instrumentation
rules:
  - apiGroups:
      - ""
    resources:
      - pods/log
      - endpoints
      - persistentvolumeclaims
      - resourcequotas
      - nodes
      - events
      - namespaces
      - services
      - configmaps
      - secrets
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/exec
    verbs:
      - create
      - update
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - statefulsets
      - deployments
      - replicasets
    verbs:
      - get
      - watch
      - list
      - update
  - apiGroups:
      - "batch"
      - "extensions"
    resources:
      - "jobs"
    verbs:
      - "get"
      - "list"
      - "watch"
  - apiGroups:
      - metrics.k8s.io
    resources:
      - pods
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - appdynamics.com
    resources:
      - '*'
      - clusteragents
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appdynamics-cluster-agent-instrumentation
subjects:
  - kind: ServiceAccount
    name: appdynamics-cluster-agent
    namespace: appdynamics
roleRef:
  kind: ClusterRole
  name: appdynamics-cluster-agent-instrumentation
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: appdynamics.com/v1alpha1
kind: InfraViz
metadata:
  name: appd-infraviz
  namespace: appdynamics
spec:
  controllerUrl: "https://saas.appdynamics.com"
  account: "customer1"
  globalAccount: "customer2_f48ef359"
  netVizPort: 3892
  enableDockerViz: "true"
  stdoutLogging: true
